{
  "name": "fft",
  "authors": [
    "Jens Nockert",
    "Jussi Kalliokoski"
  ],
  "version": "0.2.1",
  "description": "A Fast Fourier Transform library for JS.",
  "repository": {
    "type": "git",
    "url": "http://github.com/JensNockert/fft.js"
  },
  "engines": {
    "node": ">=0.6.0-0"
  },
  "licenses": [
    {
      "type": "FreeBSD"
    }
  ],
  "bugs": {
    "url": "http://github.com/JensNockert/fft.js/issues"
  },
  "main": "./lib/node.js",
  "readme": "fft.js\n================================================================================\n\nFFT in JavaScript, it works, I think.\n\nNo promises, but I tested it against Wolfram Alpha once, and it was reasonably accurate.\n\nThere are optimized kernels for prime factors, 2, 3, 4, so if you want high performance, use lengths that are a factor of those.\n\nNotice that the DFT is not normalized, so `ifft(fft(x)) / n ~= x`\n\n\nUsage\n---------------------------------------------------------------------------------\n\n```javascript\n\n/* Create a new FFT object */\n\nvar fft = new FFT.complex(n, inverse)\n\n/* Output and input should be float arrays (of the right length), type is either 'complex' (default) or 'real' */\nfft.process(output, outputOffset, outputStride, input, inputOffset, inputStride, type)\n\n/* Or the simplified interface, which just sets the offsets to 0, and the strides to 1 */\nfft.simple(output, input, type)\n\n```\n\n\nInstalling via npm\n---------------------------------------------------------------------------------\n\nYou can also install via npm, the name is `fft` in the registy.\n\n\nCredits\n---------------------------------------------------------------------------------\n\nI was too lazy to calculate the butterflies myself, so they are inspired by [kissfft](http://sourceforge.net/projects/kissfft/), which is a small library for doing discrete fourier transforms.\n\n",
  "readmeFilename": "README.md",
  "homepage": "https://github.com/JensNockert/fft.js",
  "_id": "fft@0.2.1",
  "dist": {
    "shasum": "ccdbb6bd51a7e9c0cc966a53cd3b3b5ed95b6d11"
  },
  "_from": "fft@~0.2.1",
  "_resolved": "https://registry.npmjs.org/fft/-/fft-0.2.1.tgz"
}
